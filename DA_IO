`timescale 1ns / 1ps
module DA_IO(
input clk_ODDR,
input rst_n,
input[13:0] DA_I,
input[13:0] DA_Q,

output[13:0] DA_IQ
    );
	
	genvar i;
	generate for(i=13;i>=0;i=i-1) begin:ODDR_inst
	
    ODDR #(
      .DDR_CLK_EDGE("SAME_EDGE"), // "OPPOSITE_EDGE" or "SAME_EDGE" ，采用SAME_EDGE模式，这种模式可以节省寄存器并且减少采样冲突
      .INIT(1'b0),    // Initial value of Q: 1'b0 or 1'b1，输出初始值为0
      .SRTYPE("SYNC") // Set/Reset type: "SYNC" or "ASYNC" ,同步复位
   ) U_ODDR (
      .Q(DA_IQ[i]),   // 1-bit DDR output
      .C(clk_ODDR),   // 1-bit clock input
      .CE(1'b1), // 1-bit clock enable input
      .D1(DA_I[i]), // 1-bit data input (positive edge)
      .D2(DA_Q[i]), // 1-bit data input (negative edge)
      .R(!rst_n),   // 1-bit reset
      .S()    // 1-bit set
   );
end
endgenerate
endmodule
